{"ast":null,"code":"var _jsxFileName = \"/home/saif/AllProjects/Sudoku/sudoku/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar sudokuArr = [[-1, 5, -1, 9, -1, -1, -1, -1, -1], [8, -1, -1, -1, 4, -1, 3, -1, 7], [-1, -1, -1, 2, 8, -1, 1, 9, -1], [5, 3, 8, 6, -1, 7, 9, 4, -1], [-1, 2, -1, 3, -1, 1, -1, -1, -1], [1, -1, 9, 8, -1, 4, 6, 2, 3], [9, -1, 7, 4, -1, -1, -1, -1, -1], [-1, 4, 5, -1, -1, -1, 2, -1, 9], [-1, -1, -1, -1, 3, -1, -1, 7, -1]];\nfunction App() {\n  _s();\n  const [sudokuArr, setSudokuArr] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sudoku Solver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [0, 1, 2, 3, 4, 5, 6, 7, 8].map((row, rIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [0, 1, 2, 3, 4, 5, 6, 7, 8].map((col, cIndex) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: sudokuArr[row][col] === -1 ? '' : sudokuArr[row][col],\n                  className: \"inputsection\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 21\n                }, this)\n              }, rIndex + cIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 26\n              }, this);\n            })\n          }, rIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"these solver is a project made for educational purpose only, \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"clomen.web.app\",\n        children: \"know more about the developer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jSrnH3pc1fEbz+vX6a4X9q0Dn0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","sudokuArr","App","_s","setSudokuArr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","align","map","row","rIndex","col","cIndex","value","href","_c","$RefreshReg$"],"sources":["/home/saif/AllProjects/Sudoku/sudoku/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nvar sudokuArr = \n[\n  [-1, 5, -1, 9, -1, -1, -1, -1, -1],\n  [8, -1, -1, -1, 4, -1, 3, -1, 7],\n  [-1, -1, -1, 2, 8, -1, 1, 9, -1],\n  [5, 3, 8, 6, -1, 7, 9, 4, -1],\n  [-1, 2, -1, 3, -1, 1, -1, -1, -1],\n  [1, -1, 9, 8, -1, 4, 6, 2, 3],\n  [9, -1, 7, 4, -1, -1, -1, -1, -1],\n  [-1, 4, 5, -1, -1, -1, 2, -1, 9],\n  [-1, -1, -1, -1, 3, -1, -1, 7, -1]\n]\nfunction App() {\n  const [sudokuArr, setSudokuArr] = useState();\n\n  return (\n    <div className=\"App\">\n      <h1>Sudoku Solver</h1>\n      <table align='center'>\n        <tbody>\n\n          {\n            [0, 1, 2, 3, 4, 5, 6, 7, 8].map((row, rIndex) => {\n              return <tr key={rIndex}>\n\n                {[0, 1, 2, 3, 4, 5, 6, 7, 8].map((col, cIndex) => {\n                  return <td key={rIndex + cIndex}>\n                    <input value={sudokuArr[row][col] === -1 ? '' : sudokuArr[row][col] } className='inputsection' />\n                  </td>\n                })}\n              </tr>\n            })\n          }\n        </tbody>\n      </table>\n      <footer>\n        these solver is a project made for educational purpose only, <a href =\"clomen.web.app\">know more about the developer</a>  \n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}